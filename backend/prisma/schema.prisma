datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                   String        @id @default(auto()) @map("_id") @db.ObjectId
  email                String        @unique
  password             String
  name                 String?
  role                 Role
  passwordResetCode    String?       @map("resetCode")
  resetCodeExpiresAt   DateTime?
  institutionId        String?       @db.ObjectId
  institution          Institution?  @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  posts                Post[]
  createdAt            DateTime?     @default(now())
  updatedAt            DateTime?     @updatedAt
  authoredInstitutions Institution[] @relation("InstitutionAuthor")
  isPending            Boolean       @default(true)
  expiresAt            DateTime?
  playerId             String?

  @@index([passwordResetCode])
}

model Institution {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]   @relation(fields: [], references: [])
  author    User?    @relation("InstitutionAuthor", fields: [authorId], references: [id])
  authorId  String?  @db.ObjectId
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  imageUrl  String?
  tags      String[]
  location  String?
  latitude  Float?
  longitude Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  ranking   String?  @default("Baixo")
}

model Tag {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  OPERATOR
  MANAGER
}
